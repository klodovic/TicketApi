// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketApi.Data;

#nullable disable

namespace TicketApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230101164742_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketApi.Models.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarrierName = "LOG RAIL d.o.o.",
                            ReportId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarrierName = "ADRIA TRANSPORT CROATIA d.o.o.",
                            ReportId = 2
                        });
                });

            modelBuilder.Entity("TicketApi.Models.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorizedSignature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditCardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidThru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CreditCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorizedSignature = "701",
                            CreditCardNumber = "6548RET",
                            CreditCardType = "Visa",
                            ValidThru = "05/24"
                        },
                        new
                        {
                            Id = 2,
                            AuthorizedSignature = "104",
                            CreditCardNumber = "ETP897114",
                            CreditCardType = "MasterCard",
                            ValidThru = "08/25"
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrainId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Lines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarrierId = 1,
                            LineName = "Zagreb-Split",
                            TicketPrice = 100m,
                            TrainId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarrierId = 2,
                            LineName = "Rijeka-Vinkovci",
                            TicketPrice = 200m,
                            TrainId = 2
                        });
                });

            modelBuilder.Entity("TicketApi.Models.LoyaltyProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("LoyaltyMember")
                        .HasColumnType("bit");

                    b.Property<bool>("Pensioner")
                        .HasColumnType("bit");

                    b.Property<bool>("Student")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LoyaltyPrograms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LoyaltyMember = false,
                            Pensioner = false,
                            Student = true
                        },
                        new
                        {
                            Id = 2,
                            LoyaltyMember = true,
                            Pensioner = true,
                            Student = false
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreditCardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoyaltyProgramId")
                        .HasColumnType("int");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Passengers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreditCardId = 1,
                            DateOfBirth = new DateTime(1983, 1, 1, 17, 47, 41, 809, DateTimeKind.Local).AddTicks(7674),
                            LoyaltyProgramId = 1,
                            ReportId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreditCardId = 2,
                            DateOfBirth = new DateTime(1967, 1, 1, 17, 47, 41, 809, DateTimeKind.Local).AddTicks(7680),
                            LoyaltyProgramId = 2,
                            ReportId = 2
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserReport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserReport = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
                        },
                        new
                        {
                            Id = 2,
                            UserReport = "Lorem Ipsum has been the industry's standard dummy text ever since the 1500s."
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Arrival = new DateTime(2023, 1, 1, 20, 47, 41, 809, DateTimeKind.Local).AddTicks(7423),
                            Departure = new DateTime(2023, 1, 1, 17, 47, 41, 809, DateTimeKind.Local).AddTicks(7380)
                        },
                        new
                        {
                            Id = 2,
                            Arrival = new DateTime(2023, 1, 1, 17, 47, 41, 809, DateTimeKind.Local).AddTicks(7429),
                            Departure = new DateTime(2022, 12, 31, 17, 47, 41, 809, DateTimeKind.Local).AddTicks(7426)
                        },
                        new
                        {
                            Id = 3,
                            Arrival = new DateTime(2023, 1, 1, 9, 47, 41, 809, DateTimeKind.Local).AddTicks(7433),
                            Departure = new DateTime(2023, 1, 1, 7, 47, 41, 809, DateTimeKind.Local).AddTicks(7429)
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<string>("TicketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalTicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LineId = 1,
                            PassengerId = 1,
                            TicketNumber = "#123TB56",
                            TotalTicketPrice = 120m
                        },
                        new
                        {
                            Id = 2,
                            LineId = 2,
                            PassengerId = 2,
                            TicketNumber = "#123TB56",
                            TotalTicketPrice = 240m
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Town", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("StartingLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Towns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Destination = "Zagreb",
                            ScheduleId = 1,
                            StartingLocation = "Split"
                        },
                        new
                        {
                            Id = 2,
                            Destination = "Rijeka",
                            ScheduleId = 2,
                            StartingLocation = "Vinkovci"
                        });
                });

            modelBuilder.Entity("TicketApi.Models.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TownId")
                        .HasColumnType("int");

                    b.Property<string>("TrainName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trains");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = "2",
                            TownId = 2,
                            TrainName = "Ubrzani",
                            TrainNumber = "TRW12",
                            TrainType = "Putnicki"
                        },
                        new
                        {
                            Id = 2,
                            Class = "1",
                            TownId = 1,
                            TrainName = "Brzi",
                            TrainNumber = "56HZ",
                            TrainType = "Putnicki"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
